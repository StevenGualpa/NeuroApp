// src/hooks/useAchievementModalSequence.ts
import { useState, useCallback, useEffect } from 'react';
import { useAchievementContext } from '../contexts/AchievementContext';

interface UseAchievementModalSequenceReturn {
  shouldShowModal: boolean;
  setShouldShowModal: (show: boolean) => void;
  handleGameCompletion: (completionData: any) => Promise<void>;
}

/**
 * Hook para manejar la secuencia: Notificaci√≥n de logro ‚Üí Modal de √©xito
 * Primero se muestra la notificaci√≥n de logros, luego el modal de √©xito
 */
export const useAchievementModalSequence = (): UseAchievementModalSequenceReturn => {
  const [shouldShowModal, setShouldShowModal] = useState(false);
  const [pendingCompletion, setPendingCompletion] = useState<any>(null);
  const { recordGameCompletion, onAchievementNotificationHidden } = useAchievementContext();

  // Escuchar cuando se oculta la notificaci√≥n de logros
  useEffect(() => {
    const unsubscribe = onAchievementNotificationHidden(() => {
      console.log('üîî [AchievementModalSequence] Notificaci√≥n de logro oculta, mostrando modal...');
      
      // Si hay una finalizaci√≥n pendiente, mostrar el modal
      if (pendingCompletion) {
        setShouldShowModal(true);
        setPendingCompletion(null);
      }
    });

    return unsubscribe;
  }, [onAchievementNotificationHidden, pendingCompletion]);

  const handleGameCompletion = useCallback(async (completionData: any) => {
    console.log('üéÆ [AchievementModalSequence] Procesando finalizaci√≥n de juego...');
    
    try {
      // Registrar la finalizaci√≥n (esto puede mostrar notificaciones de logros)
      await recordGameCompletion(completionData);
      
      // Guardar los datos de finalizaci√≥n para mostrar el modal despu√©s
      setPendingCompletion(completionData);
      
      // No mostrar el modal inmediatamente - esperar a que se oculte la notificaci√≥n
      console.log('‚è≥ [AchievementModalSequence] Esperando a que se oculte la notificaci√≥n de logros...');
      
    } catch (error) {
      console.error('‚ùå [AchievementModalSequence] Error en finalizaci√≥n de juego:', error);
      // En caso de error, mostrar el modal de todas formas
      setShouldShowModal(true);
    }
  }, [recordGameCompletion]);

  return {
    shouldShowModal,
    setShouldShowModal,
    handleGameCompletion,
  };
};
